{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/helpers.ts"],"names":[],"mappings":";;;AAMA,wCAEC;AAED,oCAQC;AAED,gDAQC;AA5BD,iDAAyE;AAMzE,SAAgB,cAAc,CAAC,CAAS,EAAE,CAAS;IAC/C,OAAO,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;AACnC,CAAC;AAED,SAAgB,YAAY,CAAC,CAAM,EAAE,CAAM,EAAE,GAAW;IACpD,IAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACnB,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IACD,IAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;QACnB,OAAO,CAAC,CAAC;IACb,CAAC;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AAED,SAAgB,kBAAkB,CAAC,CAAiB,EAAE,CAAiB;IACnE,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;QACxC,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;IACD,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;QACxC,OAAO,CAAC,CAAC;IACb,CAAC;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AAED,SAAS,OAAO,CAAC,MAA4B;IACzC,OAAO;QACH,+BAAoB,CAAC,OAAO;QAC5B,+BAAoB,CAAC,MAAM;QAC3B,+BAAoB,CAAC,OAAO;QAC5B,+BAAoB,CAAC,OAAO;QAC5B,+BAAoB,CAAC,SAAS;QAC9B,+BAAoB,CAAC,SAAS;QAC9B,+BAAoB,CAAC,MAAM;KAC9B,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACrB,CAAC;AAEY,QAAA,MAAM,GAAG;IAClB,EAAE,CAAC,MAAe,EAAE,OAAe;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;QAC5B,CAAC;IACL,CAAC;CACJ,CAAA","sourcesContent":["import { TestStepResult, TestStepResultStatus } from '@cucumber/messages'\n\ninterface WithId {\n    id: string | number\n}\n\nexport function comparatorById(a: WithId, b: WithId) {\n    return comparatorBy(a, b, \"id\")\n}\n\nexport function comparatorBy(a: any, b: any, key: string) {\n    if ( a[key] < b[key] ){\n        return -1;\n    }\n    if ( a[key] > b[key] ){\n        return 1;\n    }\n    return 0;\n}\n\nexport function comparatorByStatus(a: TestStepResult, b: TestStepResult) {\n    if (ordinal(a.status) < ordinal(b.status)) {\n        return -1;\n    }\n    if (ordinal(a.status) > ordinal(b.status) ){\n        return 1;\n    }\n    return 0;\n}\n\nfunction ordinal(status: TestStepResultStatus) {\n    return [\n        TestStepResultStatus.UNKNOWN,\n        TestStepResultStatus.PASSED,\n        TestStepResultStatus.SKIPPED,\n        TestStepResultStatus.PENDING,\n        TestStepResultStatus.UNDEFINED,\n        TestStepResultStatus.AMBIGUOUS,\n        TestStepResultStatus.FAILED,\n    ].indexOf(status)\n}\n\nexport const assert = {\n    ok(target: unknown, message: string) {\n        if (!target) {\n            throw new Error(message)\n        }\n    }\n}"]}
{"version":3,"file":"adapter.js","sourceRoot":"","sources":["../../../src/runtime/serial/adapter.ts"],"names":[],"mappings":";;;AAIA,sCAAkC;AAIlC,MAAa,gBAAgB;IACV,MAAM,CAAQ;IACvB,OAAO,GAAY,KAAK,CAAA;IAEhC,YACE,gBAA8B,EAC9B,KAAwB,EACxB,OAAuB,EACvB,kBAAsC;QAEtC,IAAI,CAAC,MAAM,GAAG,IAAI,eAAM,CACtB,SAAS,EACT,gBAAgB,EAChB,KAAK,EACL,OAAO,EACP,kBAAkB,CACnB,CAAA;IACH,CAAC;IAED,KAAK,CAAC,GAAG,CACP,kBAAoD;QAEpD,MAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAA;QACrC,KAAK,MAAM,IAAI,IAAI,kBAAkB,EAAE;YACrC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;YACjE,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;aACpB;SACF;QACD,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAA;QACpC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAA;IACtB,CAAC;CACF;AAhCD,4CAgCC","sourcesContent":["import { EventEmitter } from 'node:events'\nimport { IdGenerator } from '@cucumber/messages'\nimport { RuntimeAdapter } from '../types'\nimport { AssembledTestCase } from '../../assemble'\nimport { Worker } from '../worker'\nimport { RuntimeOptions } from '../index'\nimport { SupportCodeLibrary } from '../../support_code_library_builder/types'\n\nexport class InProcessAdapter implements RuntimeAdapter {\n  private readonly worker: Worker\n  private failing: boolean = false\n\n  constructor(\n    eventBroadcaster: EventEmitter,\n    newId: IdGenerator.NewId,\n    options: RuntimeOptions,\n    supportCodeLibrary: SupportCodeLibrary\n  ) {\n    this.worker = new Worker(\n      undefined,\n      eventBroadcaster,\n      newId,\n      options,\n      supportCodeLibrary\n    )\n  }\n\n  async run(\n    assembledTestCases: ReadonlyArray<AssembledTestCase>\n  ): Promise<boolean> {\n    await this.worker.runBeforeAllHooks()\n    for (const item of assembledTestCases) {\n      const success = await this.worker.runTestCase(item, this.failing)\n      if (!success) {\n        this.failing = true\n      }\n    }\n    await this.worker.runAfterAllHooks()\n    return !this.failing\n  }\n}\n"]}